@model iTextDesignerWithGUI.Models.KansasTestModels.KansasTestInstance
@using System
@using System.Linq
@using System.Collections.Generic

<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8" />
    <title>KansasTest PDF</title>
    <link href="globalStyles.css" rel="stylesheet" />
</head>
<body>
    <div class="container">
        <!-- Header with Title -->
        <header>
            <div class="title">
                @Model.Model?.Name
            </div>
        </header>

        <!-- Introductory Information -->
        <div class="intro-text">
            <p>@Model.Model?.Description</p>
            <p>
                Created At: 
                @(System.DateTime.TryParse(Model.Model?.CreatedAt, out System.DateTime createdAt) 
                    ? createdAt.ToString("yyyy-MM-dd HH:mm:ss") 
                    : "Invalid Date")
            </p>
            <p>Active: @(Model.Model?.IsActive == true ? "Yes" : "No")</p>
        </div>

        <!-- Loop through Sections -->
        @if (Model.Properties?.Sections != null && Model.Properties.Sections.Any())
        {
            foreach (var sect in Model.Properties.Sections)
            {
                <section>
                    <h2>@sect.Title</h2>
                    @if (sect.Fields != null && sect.Fields.Any())
                    {
                        <table class="section-table">
                            <thead>
                                <tr>
                                    <th>Name</th>
                                    <th>Type</th>
                                    <th>Value</th>
                                </tr>
                            </thead>
                            <tbody>
                                @foreach (var fld in sect.Fields)
                                {
                                    <tr>
                                        <td>@fld.Name</td>
                                        <td>@fld.Type</td>
                                        <td>
                                            @{
                                                var fieldValue = fld.Value?.ToString();
                                            }
                                            @if (string.Equals(fld.Type, "date", StringComparison.OrdinalIgnoreCase))
                                            {
                                                if (System.DateTime.TryParse(fieldValue, out System.DateTime fieldDate))
                                                {
                                                    @fieldDate.ToString("yyyy-MM-dd")
                                                }
                                                else
                                                {
                                                    @fieldValue
                                                }
                                            }
                                            else if (string.Equals(fld.Type, "number", StringComparison.OrdinalIgnoreCase) ||
                                                     string.Equals(fld.Type, "currency", StringComparison.OrdinalIgnoreCase))
                                            {
                                                if (System.Double.TryParse(fieldValue, out System.Double numericValue))
                                                {
                                                    @numericValue.ToString()
                                                }
                                                else
                                                {
                                                    @fieldValue
                                                }
                                            }
                                            else if (string.Equals(fld.Type, "checkbox", StringComparison.OrdinalIgnoreCase))
                                            {
                                                if (System.Boolean.TryParse(fieldValue, out bool boolValue))
                                                {
                                                    @(boolValue ? "Checked" : "Unchecked")
                                                }
                                                else
                                                {
                                                    @fieldValue
                                                }
                                            }
                                            else
                                            {
                                                @fieldValue
                                            }
                                        </td>
                                    </tr>
                                }
                            </tbody>
                        </table>
                    }
                </section>
            }
        }
    </div>
</body>
</html>
